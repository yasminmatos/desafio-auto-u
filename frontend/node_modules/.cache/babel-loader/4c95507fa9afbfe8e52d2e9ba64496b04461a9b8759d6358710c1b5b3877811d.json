{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:5000\";\nexport default function useEmailAnalysis() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const analyzeText = async (text, model) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/classify`, {\n        text,\n        model\n      });\n      setResult(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Erro ao processar o email\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const analyzeFile = async (file, model) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"model\", model);\n      const response = await axios.post(`${API_BASE_URL}/classify-file`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setResult(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Erro ao processar o arquivo\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clear = () => {\n    setResult(null);\n    setError(null);\n  };\n  return {\n    loading,\n    result,\n    error,\n    analyzeText,\n    analyzeFile,\n    clear\n  };\n}\n_s(useEmailAnalysis, \"TIBGSCeJrdKcjTsj20P4UouJYBg=\");","map":{"version":3,"names":["useState","axios","API_BASE_URL","useEmailAnalysis","_s","loading","setLoading","result","setResult","error","setError","analyzeText","text","model","response","post","data","err","_err$response","_err$response$data","analyzeFile","file","formData","FormData","append","headers","_err$response2","_err$response2$data","clear"],"sources":["C:/Users/Yasmin/Documents/Projetos/Desafio Auto U/frontend/src/hooks/useEmailAnalysis.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"http://127.0.0.1:5000\";\n\nexport default function useEmailAnalysis() {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  const analyzeText = async (text, model) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/classify`, {\n        text,\n        model,\n      });\n      setResult(response.data);\n    } catch (err) {\n      setError(err.response?.data?.error || \"Erro ao processar o email\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const analyzeFile = async (file, model) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"model\", model);\n\n      const response = await axios.post(\n        `${API_BASE_URL}/classify-file`,\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }\n      );\n      setResult(response.data);\n    } catch (err) {\n      setError(err.response?.data?.error || \"Erro ao processar o arquivo\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clear = () => {\n    setResult(null);\n    setError(null);\n  };\n\n  return { loading, result, error, analyzeText, analyzeFile, clear };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IACzCP,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,GAAGb,YAAY,WAAW,EAAE;QAC5DU,IAAI;QACJC;MACF,CAAC,CAAC;MACFL,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZT,QAAQ,CAAC,EAAAQ,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBV,KAAK,KAAI,2BAA2B,CAAC;IACpE,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMc,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAER,KAAK,KAAK;IACzCP,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IACdF,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MACF,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC7BC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,KAAK,CAAC;MAE/B,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,GAAGb,YAAY,gBAAgB,EAC/BoB,QAAQ,EACR;QACEG,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CACF,CAAC;MACDjB,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAS,cAAA,EAAAC,mBAAA;MACZjB,QAAQ,CAAC,EAAAgB,cAAA,GAAAT,GAAG,CAACH,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcV,IAAI,cAAAW,mBAAA,uBAAlBA,mBAAA,CAAoBlB,KAAK,KAAI,6BAA6B,CAAC;IACtE,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,KAAK,GAAGA,CAAA,KAAM;IAClBpB,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,OAAO;IAAEL,OAAO;IAAEE,MAAM;IAAEE,KAAK;IAAEE,WAAW;IAAES,WAAW;IAAEQ;EAAM,CAAC;AACpE;AAACxB,EAAA,CApDuBD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}